
> obliq-2@0.1.0 test:codegen
> jest __tests__/integration/code-generation --verbose --runInBand

  console.log
    Loaded 3 model files from C:\Users\rrain\OneDrive\Documents\GitHub\obliq-2\__tests__\integration\code-generation\models

      at log (__tests__/integration/code-generation/code-compilation.test.ts:91:13)

  console.log
    
    Building Docker image for PlatformIO...

      at log (__tests__/integration/code-generation/code-compilation.test.ts:97:13)

  console.log
    
    ================================================================================

      at log (__tests__/integration/code-generation/code-compilation.test.ts:16:13)

  console.log
    EXECUTING: docker build -t platformio-test -f C:\Users\rrain\OneDrive\Documents\GitHub\obliq-2\__tests__\integration\code-generation\docker\Dockerfile.platformio C:\Users\rrain\OneDrive\Documents\GitHub\obliq-2\__tests__\integration\code-generation\docker

      at log (__tests__/integration/code-generation/code-compilation.test.ts:17:13)

  console.log
    IN DIR: C:\Users\rrain\OneDrive\Documents\GitHub\obliq-2

      at log (__tests__/integration/code-generation/code-compilation.test.ts:18:13)

  console.log
    ================================================================================

      at log (__tests__/integration/code-generation/code-compilation.test.ts:19:13)

  console.log
    STDOUT:

      at log (__tests__/integration/code-generation/code-compilation.test.ts:33:15)

  console.log


      at log (__tests__/integration/code-generation/code-compilation.test.ts:34:15)

  console.log
    Docker image built successfully

      at log (__tests__/integration/code-generation/code-compilation.test.ts:139:13)

  console.log
    
    ********************************************************************************

      at Object.log (__tests__/integration/code-generation/code-compilation.test.ts:265:13)

  console.log
    BEFORE EACH - Setting up directories

      at Object.log (__tests__/integration/code-generation/code-compilation.test.ts:266:13)

  console.log
    ********************************************************************************

      at Object.log (__tests__/integration/code-generation/code-compilation.test.ts:267:13)

  console.log
    
    ################################################################################

      at log (__tests__/integration/code-generation/code-compilation.test.ts:359:13)

  console.log
    TEST: Model itest-01

      at log (__tests__/integration/code-generation/code-compilation.test.ts:360:13)

  console.log
    SOURCE: itest-01.json

      at log (__tests__/integration/code-generation/code-compilation.test.ts:361:13)

  console.log
    ################################################################################

      at log (__tests__/integration/code-generation/code-compilation.test.ts:362:13)

  console.log
    [CodeGen] generateStepFunction called

      at log (src/lib/codeGeneration.ts:299:11)

  console.log
    [CodeGen] Collecting internal signals...

      at log (src/lib/codeGeneration.ts:308:13)

  console.log
    [CodeGen] Calculating execution order...

      at log (src/lib/codeGeneration.ts:327:13)

  console.log
    [CodeGen] Execution order calculated, blocks: 8

      at log (src/lib/codeGeneration.ts:329:13)

  console.log
    [CodeGen] Processing block: source Source1

      at log (src/lib/codeGeneration.ts:339:15)

  console.log
    [CodeGen] generateBlockComputation for: source Source1

      at log (src/lib/codeGeneration.ts:379:11)

  console.log
    [CodeGen] Block has 0 input connections

      at log (src/lib/codeGeneration.ts:395:11)

  console.log
    [CodeGen] Processing block: source Source4

      at log (src/lib/codeGeneration.ts:339:15)

  console.log
    [CodeGen] generateBlockComputation for: source Source4

      at log (src/lib/codeGeneration.ts:379:11)

  console.log
    [CodeGen] Block has 0 input connections

      at log (src/lib/codeGeneration.ts:395:11)

  console.log
    [CodeGen] Processing block: source Source6

      at log (src/lib/codeGeneration.ts:339:15)

  console.log
    [CodeGen] generateBlockComputation for: source Source6

      at log (src/lib/codeGeneration.ts:379:11)

  console.log
    [CodeGen] Block has 0 input connections

      at log (src/lib/codeGeneration.ts:395:11)

  console.log
    [CodeGen] Processing block: transfer_function Transfer function2

      at log (src/lib/codeGeneration.ts:339:15)

  console.log
    [CodeGen] generateBlockComputation for: transfer_function Transfer function2

      at log (src/lib/codeGeneration.ts:379:11)

  console.log
    [CodeGen] Block has 1 input connections

      at log (src/lib/codeGeneration.ts:395:11)

  console.log
    [CodeGen] Processing block: output_port Output port3

      at log (src/lib/codeGeneration.ts:339:15)

  console.log
    [CodeGen] generateBlockComputation for: output_port Output port3

      at log (src/lib/codeGeneration.ts:379:11)

  console.log
    [CodeGen] Block has 1 input connections

      at log (src/lib/codeGeneration.ts:395:11)

  console.log
    [CodeGen] Processing block: output_port Output port5

      at log (src/lib/codeGeneration.ts:339:15)

  console.log
    [CodeGen] generateBlockComputation for: output_port Output port5

      at log (src/lib/codeGeneration.ts:379:11)

  console.log
    [CodeGen] Block has 1 input connections

      at log (src/lib/codeGeneration.ts:395:11)

  console.log
    [CodeGen] Processing block: transfer_function Transfer function7

      at log (src/lib/codeGeneration.ts:339:15)

  console.log
    [CodeGen] generateBlockComputation for: transfer_function Transfer function7

      at log (src/lib/codeGeneration.ts:379:11)

  console.log
    [CodeGen] Block has 1 input connections

      at log (src/lib/codeGeneration.ts:395:11)

  console.log
    [CodeGen] Processing block: output_port Output port8

      at log (src/lib/codeGeneration.ts:339:15)

  console.log
    [CodeGen] generateBlockComputation for: output_port Output port8

      at log (src/lib/codeGeneration.ts:379:11)

  console.log
    [CodeGen] Block has 1 input connections

      at log (src/lib/codeGeneration.ts:395:11)

  console.log
    [CodeGen] Step function generation complete

      at log (src/lib/codeGeneration.ts:365:13)

  console.log
    
    Generated file: model_itest_01.h (1060 bytes)

      at log (__tests__/integration/code-generation/code-compilation.test.ts:383:15)
          at Array.forEach (<anonymous>)

  console.log
    ----------------------------------------

      at log (__tests__/integration/code-generation/code-compilation.test.ts:384:15)
          at Array.forEach (<anonymous>)

  console.log
    #ifndef MODEL_ITEST_01_H
    #define MODEL_ITEST_01_H
    
    #include <stdint.h>
    #include <stdbool.h>
    #include <string.h>
    #include <math.h>
    
    #ifdef __cplusplus
    extern "C" {
    #endif
    
    // Output signals structure
    typedef struct {
        double out2[3];
        double out0;
        double out1;
    } model_itest_01_outputs_t;
    
    // Internal states structure
    typedef struct {
        double Transfer_function2_states[3][1];
        double Transfer_function7_states[1];
    } model_itest_01_states_t;
    
    // Main model structure
    typedef struct {
     
    ...

      at log (__tests__/integration/code-generation/code-compilation.test.ts:385:15)
          at Array.forEach (<anonymous>)

  console.log
    ----------------------------------------

      at log (__tests__/integration/code-generation/code-compilation.test.ts:386:15)
          at Array.forEach (<anonymous>)

  console.log
    
    Generated file: model_itest_01.c (3729 bytes)

      at log (__tests__/integration/code-generation/code-compilation.test.ts:383:15)
          at Array.forEach (<anonymous>)

  console.log
    ----------------------------------------

      at log (__tests__/integration/code-generation/code-compilation.test.ts:384:15)
          at Array.forEach (<anonymous>)

  console.log
    #include "model_itest_01.h"
    
    void model_itest_01_init(model_itest_01_t* model, double time_step) {
        // Initialize model parameters
        model->time = 0.0;
        model->dt = time_step;
    
        // Initialize transfer function states
        memset(model->states.Transfer_function2_states, 0, sizeof(model->states.Transfer_function2_states));
        memset(model->states.Transfer_function7_states, 0, sizeof(model->states.Transfer_function7_states));
    }
    
    void model_itest_01_step(model_itest_01_t* model) {
        // 
    ...

      at log (__tests__/integration/code-generation/code-compilation.test.ts:385:15)
          at Array.forEach (<anonymous>)

  console.log
    ----------------------------------------

      at log (__tests__/integration/code-generation/code-compilation.test.ts:386:15)
          at Array.forEach (<anonymous>)

  console.log
    
    Generated file: library.properties (287 bytes)

      at log (__tests__/integration/code-generation/code-compilation.test.ts:383:15)
          at Array.forEach (<anonymous>)

  console.log
    ----------------------------------------

      at log (__tests__/integration/code-generation/code-compilation.test.ts:384:15)
          at Array.forEach (<anonymous>)

  console.log
    name=model_itest_01
    version=1.0.0
    author=Generated
    maintainer=Generated
    sentence=Generated library from visual model model_itest_01
    paragraph=This library was automatically generated from a block diagram model.
    category=Signal Input/Output
    url=
    architectures=*
    includes=model_itest_01.h

      at log (__tests__/integration/code-generation/code-compilation.test.ts:385:15)
          at Array.forEach (<anonymous>)

  console.log
    ----------------------------------------

      at log (__tests__/integration/code-generation/code-compilation.test.ts:386:15)
          at Array.forEach (<anonymous>)

  console.log
    
    Test program: C:\Users\rrain\OneDrive\Documents\GitHub\obliq-2\__tests__\integration\code-generation\platformio-test\src\main.cpp

      at log (__tests__/integration/code-generation/code-compilation.test.ts:400:13)

  console.log
    ----------------------------------------

      at log (__tests__/integration/code-generation/code-compilation.test.ts:401:13)

  console.log
    #include <model_itest_01.h>
    #include <stdio.h>
    
    int main() {
        model_itest_01_t model;
        model_itest_01_init(&model, 0.01);
        
        
        // Run one step
        model_itest_01_step(&model);
        
        printf("out2:\n");
        printf("  [0]: %f\n", model.outputs.out2[0]);
        printf("  [1]: %f\n", model.outputs.out2[1]);
        printf("  [2]: %f\n", model.outputs.out2[2]);
        printf("out0: %f\n", model.outputs.out0);
        printf("out1: %f\n", model.outputs.out1);
        
        return 0;
    }

      at log (__tests__/integration/code-generation/code-compilation.test.ts:402:13)

  console.log
    ----------------------------------------

      at log (__tests__/integration/code-generation/code-compilation.test.ts:403:13)

  console.log
    
    Running compilation in Docker for Model itest-01...

      at log (__tests__/integration/code-generation/code-compilation.test.ts:144:13)

  console.log
    
    ================================================================================

      at log (__tests__/integration/code-generation/code-compilation.test.ts:16:13)

  console.log
    EXECUTING: docker run --rm -v C:\Users\rrain\OneDrive\Documents\GitHub\obliq-2\__tests__\integration\code-generation\platformio-test\temp\model_itest-01:/workspace -w /workspace platformio-test bash -c "find . -print && pio run -e native && .pio/build/native/program"

      at log (__tests__/integration/code-generation/code-compilation.test.ts:17:13)

  console.log
    IN DIR: C:\Users\rrain\OneDrive\Documents\GitHub\obliq-2

      at log (__tests__/integration/code-generation/code-compilation.test.ts:18:13)

  console.log
    ================================================================================

      at log (__tests__/integration/code-generation/code-compilation.test.ts:19:13)

  console.log
    COMMAND FAILED!

      at log (__tests__/integration/code-generation/code-compilation.test.ts:38:15)

  console.log
    
    STDOUT:

      at log (__tests__/integration/code-generation/code-compilation.test.ts:41:17)

  console.log
    .
    ./lib
    ./lib/model_itest_01
    ./lib/model_itest_01/library.properties
    ./lib/model_itest_01/model_itest_01.h
    ./lib/model_itest_01/src
    ./lib/model_itest_01/src/model_itest_01.c
    ./platformio.ini
    ./src
    ./src/main.cpp
    ./src/model_itest_01.h
    Processing native (platform: native)
    --------------------------------------------------------------------------------
    Tool Manager: Installing platformio/tool-scons @ ~4.40801.0
    Downloading 0% 10% 20% 30% 40% 50% 60% 70% 80% 90% 100%
    Unpacking 0% 10% 20% 30% 40% 50% 60% 70% 80% 90% 100%
    Tool Manager: tool-scons@4.40801.0 has been installed!
    Verbose mode can be enabled via `-v, --verbose` option
    LDF: Library Dependency Finder -> https://bit.ly/configure-pio-ldf
    LDF Modes: Finder ~ chain, Compatibility ~ soft
    Found 0 compatible libraries
    Scanning dependencies...
    No dependencies
    Building in release mode
    Compiling .pio/build/native/src/main.o
    Linking .pio/build/native/program

      at log (__tests__/integration/code-generation/code-compilation.test.ts:42:17)

  console.log
    
    STDERR:

      at log (__tests__/integration/code-generation/code-compilation.test.ts:46:17)

  console.log
    /usr/bin/ld: .pio/build/native/src/main.o: in function `main':
    main.cpp:(.text+0x1c): undefined reference to `model_itest_01_init'
    /usr/bin/ld: main.cpp:(.text+0x28): undefined reference to `model_itest_01_step'
    collect2: error: ld returned 1 exit status
    *** [.pio/build/native/program] Error 1
    ========================== [FAILED] Took 3.75 seconds ==========================

      at log (__tests__/integration/code-generation/code-compilation.test.ts:47:17)

  console.log
    
    ERROR MESSAGE:

      at log (__tests__/integration/code-generation/code-compilation.test.ts:51:17)

  console.log
    Command failed: docker run --rm -v C:\Users\rrain\OneDrive\Documents\GitHub\obliq-2\__tests__\integration\code-generation\platformio-test\temp\model_itest-01:/workspace -w /workspace platformio-test bash -c "find . -print && pio run -e native && .pio/build/native/program"
    /usr/bin/ld: .pio/build/native/src/main.o: in function `main':
    main.cpp:(.text+0x1c): undefined reference to `model_itest_01_init'
    /usr/bin/ld: main.cpp:(.text+0x28): undefined reference to `model_itest_01_step'
    collect2: error: ld returned 1 exit status
    *** [.pio/build/native/program] Error 1
    ========================== [FAILED] Took 3.75 seconds ==========================

      at log (__tests__/integration/code-generation/code-compilation.test.ts:52:17)

  console.log
    
    ********************************************************************************

      at Object.log (__tests__/integration/code-generation/code-compilation.test.ts:265:13)

  console.log
    BEFORE EACH - Setting up directories

      at Object.log (__tests__/integration/code-generation/code-compilation.test.ts:266:13)

  console.log
    ********************************************************************************

      at Object.log (__tests__/integration/code-generation/code-compilation.test.ts:267:13)

  console.log
    
    ################################################################################

      at log (__tests__/integration/code-generation/code-compilation.test.ts:359:13)

  console.log
    TEST: Multiply and Scale Test

      at log (__tests__/integration/code-generation/code-compilation.test.ts:360:13)

  console.log
    SOURCE: itest-02-with-metadata.json

      at log (__tests__/integration/code-generation/code-compilation.test.ts:361:13)

  console.log
    ################################################################################

      at log (__tests__/integration/code-generation/code-compilation.test.ts:362:13)

  console.log
    [CodeGen] generateStepFunction called

      at log (src/lib/codeGeneration.ts:299:11)

  console.log
    [CodeGen] Collecting internal signals...

      at log (src/lib/codeGeneration.ts:308:13)

  console.log
    [CodeGen] Calculating execution order...

      at log (src/lib/codeGeneration.ts:327:13)

  console.log
    [CodeGen] Execution order calculated, blocks: 5

      at log (src/lib/codeGeneration.ts:329:13)

  console.log
    [CodeGen] Processing block: input_port Input1

      at log (src/lib/codeGeneration.ts:339:15)

  console.log
    [CodeGen] Skipping block type: input_port

      at log (src/lib/codeGeneration.ts:347:17)

  console.log
    [CodeGen] Processing block: input_port Input2

      at log (src/lib/codeGeneration.ts:339:15)

  console.log
    [CodeGen] Skipping block type: input_port

      at log (src/lib/codeGeneration.ts:347:17)

  console.log
    [CodeGen] Processing block: multiply Multiply1

      at log (src/lib/codeGeneration.ts:339:15)

  console.log
    [CodeGen] generateBlockComputation for: multiply Multiply1

      at log (src/lib/codeGeneration.ts:379:11)

  console.log
    [CodeGen] Block has 2 input connections

      at log (src/lib/codeGeneration.ts:395:11)

  console.log
    [CodeGen] Processing block: scale Scale1

      at log (src/lib/codeGeneration.ts:339:15)

  console.log
    [CodeGen] generateBlockComputation for: scale Scale1

      at log (src/lib/codeGeneration.ts:379:11)

  console.log
    [CodeGen] Block has 1 input connections

      at log (src/lib/codeGeneration.ts:395:11)

  console.log
    [CodeGen] Processing block: output_port Output1

      at log (src/lib/codeGeneration.ts:339:15)

  console.log
    [CodeGen] generateBlockComputation for: output_port Output1

      at log (src/lib/codeGeneration.ts:379:11)

  console.log
    [CodeGen] Block has 1 input connections

      at log (src/lib/codeGeneration.ts:395:11)

  console.log
    [CodeGen] Step function generation complete

      at log (src/lib/codeGeneration.ts:365:13)

  console.log
    
    Generated file: multiply_and_scale_test.h (883 bytes)

      at log (__tests__/integration/code-generation/code-compilation.test.ts:383:15)
          at Array.forEach (<anonymous>)

  console.log
    ----------------------------------------

      at log (__tests__/integration/code-generation/code-compilation.test.ts:384:15)
          at Array.forEach (<anonymous>)

  console.log
    #ifndef MULTIPLY_AND_SCALE_TEST_H
    #define MULTIPLY_AND_SCALE_TEST_H
    
    #include <stdint.h>
    #include <stdbool.h>
    #include <string.h>
    #include <math.h>
    
    #ifdef __cplusplus
    extern "C" {
    #endif
    
    // Input signals structure
    typedef struct {
        double Input1;
        double Input2;
    } multiply_and_scale_test_inputs_t;
    
    // Output signals structure
    typedef struct {
        double Result;
    } multiply_and_scale_test_outputs_t;
    
    // Main model structure
    typedef struct {
        multiply_and_scale_test_inputs_t inputs;
        
    ...

      at log (__tests__/integration/code-generation/code-compilation.test.ts:385:15)
          at Array.forEach (<anonymous>)

  console.log
    ----------------------------------------

      at log (__tests__/integration/code-generation/code-compilation.test.ts:386:15)
          at Array.forEach (<anonymous>)

  console.log
    
    Generated file: multiply_and_scale_test.c (769 bytes)

      at log (__tests__/integration/code-generation/code-compilation.test.ts:383:15)
          at Array.forEach (<anonymous>)

  console.log
    ----------------------------------------

      at log (__tests__/integration/code-generation/code-compilation.test.ts:384:15)
          at Array.forEach (<anonymous>)

  console.log
    #include "multiply_and_scale_test.h"
    
    void multiply_and_scale_test_init(multiply_and_scale_test_t* model, double time_step) {
        // Initialize model parameters
        model->time = 0.0;
        model->dt = time_step;
    
        // Initialize inputs
        model->inputs.Input1 = 0;
        model->inputs.Input2 = 0;
    
    }
    
    void multiply_and_scale_test_step(multiply_and_scale_test_t* model) {
        // Internal signals
        double sig_Multiply1;
        double sig_Scale1;
    
        // Compute block outputs
        // Multiply block: Mul
    ...

      at log (__tests__/integration/code-generation/code-compilation.test.ts:385:15)
          at Array.forEach (<anonymous>)

  console.log
    ----------------------------------------

      at log (__tests__/integration/code-generation/code-compilation.test.ts:386:15)
          at Array.forEach (<anonymous>)

  console.log
    
    Generated file: library.properties (314 bytes)

      at log (__tests__/integration/code-generation/code-compilation.test.ts:383:15)
          at Array.forEach (<anonymous>)

  console.log
    ----------------------------------------

      at log (__tests__/integration/code-generation/code-compilation.test.ts:384:15)
          at Array.forEach (<anonymous>)

  console.log
    name=multiply_and_scale_test
    version=1.0.0
    author=Generated
    maintainer=Generated
    sentence=Generated library from visual model multiply_and_scale_test
    paragraph=This library was automatically generated from a block diagram model.
    category=Signal Input/Output
    url=
    architectures=*
    includes=multiply_and_scale_test.h

      at log (__tests__/integration/code-generation/code-compilation.test.ts:385:15)
          at Array.forEach (<anonymous>)

  console.log
    ----------------------------------------

      at log (__tests__/integration/code-generation/code-compilation.test.ts:386:15)
          at Array.forEach (<anonymous>)

  console.log
    
    Test program: C:\Users\rrain\OneDrive\Documents\GitHub\obliq-2\__tests__\integration\code-generation\platformio-test\src\main.cpp

      at log (__tests__/integration/code-generation/code-compilation.test.ts:400:13)

  console.log
    ----------------------------------------

      at log (__tests__/integration/code-generation/code-compilation.test.ts:401:13)

  console.log
    #include <multiply_and_scale_test.h>
    #include <stdio.h>
    
    int main() {
        multiply_and_scale_test_t model;
        multiply_and_scale_test_init(&model, 0.01);
        
        model.inputs.Input1 = 3;
        model.inputs.Input2 = 4;
        
        // Run one step
        multiply_and_scale_test_step(&model);
        
        printf("Result: %f\n", model.outputs.Result);
        
        // Validate expected output
        double expected = 30;
        double actual = model.outputs.Result;
        double tolerance = 0.00001;
        if (actual >= expected - tolerance && actual <= expected + tolerance) {
            printf("✓ Test passed! Output: %f\n", actual);
        } else {
            printf("✗ Test failed! Expected: %f, Got: %f\n", expected, actual);
            return 1;
        }
        
        return 0;
    }

      at log (__tests__/integration/code-generation/code-compilation.test.ts:402:13)

  console.log
    ----------------------------------------

      at log (__tests__/integration/code-generation/code-compilation.test.ts:403:13)

  console.log
    
    Running compilation in Docker for Multiply and Scale Test...

      at log (__tests__/integration/code-generation/code-compilation.test.ts:144:13)

  console.log
    
    ================================================================================

      at log (__tests__/integration/code-generation/code-compilation.test.ts:16:13)

  console.log
    EXECUTING: docker run --rm -v C:\Users\rrain\OneDrive\Documents\GitHub\obliq-2\__tests__\integration\code-generation\platformio-test\temp\multiply_and_scale_test:/workspace -w /workspace platformio-test bash -c "find . -print && pio run -e native && .pio/build/native/program"

      at log (__tests__/integration/code-generation/code-compilation.test.ts:17:13)

  console.log
    IN DIR: C:\Users\rrain\OneDrive\Documents\GitHub\obliq-2

      at log (__tests__/integration/code-generation/code-compilation.test.ts:18:13)

  console.log
    ================================================================================

      at log (__tests__/integration/code-generation/code-compilation.test.ts:19:13)

  console.log
    COMMAND FAILED!

      at log (__tests__/integration/code-generation/code-compilation.test.ts:38:15)

  console.log
    
    STDOUT:

      at log (__tests__/integration/code-generation/code-compilation.test.ts:41:17)

  console.log
    .
    ./lib
    ./lib/multiply_and_scale_test
    ./lib/multiply_and_scale_test/library.properties
    ./lib/multiply_and_scale_test/multiply_and_scale_test.h
    ./lib/multiply_and_scale_test/src
    ./lib/multiply_and_scale_test/src/multiply_and_scale_test.c
    ./platformio.ini
    ./src
    ./src/main.cpp
    ./src/multiply_and_scale_test.h
    Processing native (platform: native)
    --------------------------------------------------------------------------------
    Tool Manager: Installing platformio/tool-scons @ ~4.40801.0
    Downloading 0% 10% 20% 30% 40% 50% 60% 70% 80% 90% 100%
    Unpacking 0% 10% 20% 30% 40% 50% 60% 70% 80% 90% 100%
    Tool Manager: tool-scons@4.40801.0 has been installed!
    Verbose mode can be enabled via `-v, --verbose` option
    LDF: Library Dependency Finder -> https://bit.ly/configure-pio-ldf
    LDF Modes: Finder ~ chain, Compatibility ~ soft
    Found 0 compatible libraries
    Scanning dependencies...
    No dependencies
    Building in release mode
    Compiling .pio/build/native/src/main.o
    Linking .pio/build/native/program

      at log (__tests__/integration/code-generation/code-compilation.test.ts:42:17)

  console.log
    
    STDERR:

      at log (__tests__/integration/code-generation/code-compilation.test.ts:46:17)

  console.log
    /usr/bin/ld: .pio/build/native/src/main.o: in function `main':
    main.cpp:(.text+0x1c): undefined reference to `multiply_and_scale_test_init'
    /usr/bin/ld: main.cpp:(.text+0x42): undefined reference to `multiply_and_scale_test_step'
    collect2: error: ld returned 1 exit status
    *** [.pio/build/native/program] Error 1
    ========================== [FAILED] Took 3.43 seconds ==========================

      at log (__tests__/integration/code-generation/code-compilation.test.ts:47:17)

  console.log
    
    ERROR MESSAGE:

      at log (__tests__/integration/code-generation/code-compilation.test.ts:51:17)

  console.log
    Command failed: docker run --rm -v C:\Users\rrain\OneDrive\Documents\GitHub\obliq-2\__tests__\integration\code-generation\platformio-test\temp\multiply_and_scale_test:/workspace -w /workspace platformio-test bash -c "find . -print && pio run -e native && .pio/build/native/program"
    /usr/bin/ld: .pio/build/native/src/main.o: in function `main':
    main.cpp:(.text+0x1c): undefined reference to `multiply_and_scale_test_init'
    /usr/bin/ld: main.cpp:(.text+0x42): undefined reference to `multiply_and_scale_test_step'
    collect2: error: ld returned 1 exit status
    *** [.pio/build/native/program] Error 1
    ========================== [FAILED] Took 3.43 seconds ==========================

      at log (__tests__/integration/code-generation/code-compilation.test.ts:52:17)

  console.log
    
    ********************************************************************************

      at Object.log (__tests__/integration/code-generation/code-compilation.test.ts:265:13)

  console.log
    BEFORE EACH - Setting up directories

      at Object.log (__tests__/integration/code-generation/code-compilation.test.ts:266:13)

  console.log
    ********************************************************************************

      at Object.log (__tests__/integration/code-generation/code-compilation.test.ts:267:13)

  console.log
    
    ################################################################################

      at log (__tests__/integration/code-generation/code-compilation.test.ts:359:13)

  console.log
    TEST: New Model

      at log (__tests__/integration/code-generation/code-compilation.test.ts:360:13)

  console.log
    SOURCE: itest-02.json

      at log (__tests__/integration/code-generation/code-compilation.test.ts:361:13)

  console.log
    ################################################################################

      at log (__tests__/integration/code-generation/code-compilation.test.ts:362:13)

  console.log
    [CodeGen] generateStepFunction called

      at log (src/lib/codeGeneration.ts:299:11)

  console.log
    [CodeGen] Collecting internal signals...

      at log (src/lib/codeGeneration.ts:308:13)

  console.log
    [CodeGen] Calculating execution order...

      at log (src/lib/codeGeneration.ts:327:13)

  console.log
    [CodeGen] Execution order calculated, blocks: 0

      at log (src/lib/codeGeneration.ts:329:13)

  console.log
    [CodeGen] Step function generation complete

      at log (src/lib/codeGeneration.ts:365:13)

  console.log
    
    Generated file: new_model.h (458 bytes)

      at log (__tests__/integration/code-generation/code-compilation.test.ts:383:15)
          at Array.forEach (<anonymous>)

  console.log
    ----------------------------------------

      at log (__tests__/integration/code-generation/code-compilation.test.ts:384:15)
          at Array.forEach (<anonymous>)

  console.log
    #ifndef NEW_MODEL_H
    #define NEW_MODEL_H
    
    #include <stdint.h>
    #include <stdbool.h>
    #include <string.h>
    #include <math.h>
    
    #ifdef __cplusplus
    extern "C" {
    #endif
    
    // Main model structure
    typedef struct {
        double time;
        double dt;
    } new_model_t;
    
    // Initialize the model
    void new_model_init(new_model_t* model, double time_step);
    
    // Execute one simulation step
    void new_model_step(new_model_t* model);
    
    #ifdef __cplusplus
    }
    #endif
    
    #endif // NEW_MODEL_H

      at log (__tests__/integration/code-generation/code-compilation.test.ts:385:15)
          at Array.forEach (<anonymous>)

  console.log
    ----------------------------------------

      at log (__tests__/integration/code-generation/code-compilation.test.ts:386:15)
          at Array.forEach (<anonymous>)

  console.log
    
    Generated file: new_model.c (333 bytes)

      at log (__tests__/integration/code-generation/code-compilation.test.ts:383:15)
          at Array.forEach (<anonymous>)

  console.log
    ----------------------------------------

      at log (__tests__/integration/code-generation/code-compilation.test.ts:384:15)
          at Array.forEach (<anonymous>)

  console.log
    #include "new_model.h"
    
    void new_model_init(new_model_t* model, double time_step) {
        // Initialize model parameters
        model->time = 0.0;
        model->dt = time_step;
    
    }
    
    void new_model_step(new_model_t* model) {
        // Internal signals
    
        // Compute block outputs
    
        // Update simulation time
        model->time += model->dt;
    }

      at log (__tests__/integration/code-generation/code-compilation.test.ts:385:15)
          at Array.forEach (<anonymous>)

  console.log
    ----------------------------------------

      at log (__tests__/integration/code-generation/code-compilation.test.ts:386:15)
          at Array.forEach (<anonymous>)

  console.log
    
    Generated file: library.properties (272 bytes)

      at log (__tests__/integration/code-generation/code-compilation.test.ts:383:15)
          at Array.forEach (<anonymous>)

  console.log
    ----------------------------------------

      at log (__tests__/integration/code-generation/code-compilation.test.ts:384:15)
          at Array.forEach (<anonymous>)

  console.log
    name=new_model
    version=1.0.0
    author=Generated
    maintainer=Generated
    sentence=Generated library from visual model new_model
    paragraph=This library was automatically generated from a block diagram model.
    category=Signal Input/Output
    url=
    architectures=*
    includes=new_model.h

      at log (__tests__/integration/code-generation/code-compilation.test.ts:385:15)
          at Array.forEach (<anonymous>)

  console.log
    ----------------------------------------

      at log (__tests__/integration/code-generation/code-compilation.test.ts:386:15)
          at Array.forEach (<anonymous>)

  console.log
    
    Test program: C:\Users\rrain\OneDrive\Documents\GitHub\obliq-2\__tests__\integration\code-generation\platformio-test\src\main.cpp

      at log (__tests__/integration/code-generation/code-compilation.test.ts:400:13)

  console.log
    ----------------------------------------

      at log (__tests__/integration/code-generation/code-compilation.test.ts:401:13)

  console.log
    #include <new_model.h>
    #include <stdio.h>
    
    int main() {
        new_model_t model;
        new_model_init(&model, 0.01);
        
        
        // Run one step
        new_model_step(&model);
        
        
        return 0;
    }

      at log (__tests__/integration/code-generation/code-compilation.test.ts:402:13)

  console.log
    ----------------------------------------

      at log (__tests__/integration/code-generation/code-compilation.test.ts:403:13)

  console.log
    
    Running compilation in Docker for New Model...

      at log (__tests__/integration/code-generation/code-compilation.test.ts:144:13)

  console.log
    
    ================================================================================

      at log (__tests__/integration/code-generation/code-compilation.test.ts:16:13)

  console.log
    EXECUTING: docker run --rm -v C:\Users\rrain\OneDrive\Documents\GitHub\obliq-2\__tests__\integration\code-generation\platformio-test\temp\new_model:/workspace -w /workspace platformio-test bash -c "find . -print && pio run -e native && .pio/build/native/program"

      at log (__tests__/integration/code-generation/code-compilation.test.ts:17:13)

  console.log
    IN DIR: C:\Users\rrain\OneDrive\Documents\GitHub\obliq-2

      at log (__tests__/integration/code-generation/code-compilation.test.ts:18:13)

  console.log
    ================================================================================

      at log (__tests__/integration/code-generation/code-compilation.test.ts:19:13)

  console.log
    COMMAND FAILED!

      at log (__tests__/integration/code-generation/code-compilation.test.ts:38:15)

  console.log
    
    STDOUT:

      at log (__tests__/integration/code-generation/code-compilation.test.ts:41:17)

  console.log
    .
    ./lib
    ./lib/new_model
    ./lib/new_model/library.properties
    ./lib/new_model/new_model.h
    ./lib/new_model/src
    ./lib/new_model/src/new_model.c
    ./platformio.ini
    ./src
    ./src/main.cpp
    ./src/new_model.h
    Processing native (platform: native)
    --------------------------------------------------------------------------------
    Tool Manager: Installing platformio/tool-scons @ ~4.40801.0
    Downloading 0% 10% 20% 30% 40% 50% 60% 70% 80% 90% 100%
    Unpacking 0% 10% 20% 30% 40% 50% 60% 70% 80% 90% 100%
    Tool Manager: tool-scons@4.40801.0 has been installed!
    Verbose mode can be enabled via `-v, --verbose` option
    LDF: Library Dependency Finder -> https://bit.ly/configure-pio-ldf
    LDF Modes: Finder ~ chain, Compatibility ~ soft
    Found 0 compatible libraries
    Scanning dependencies...
    No dependencies
    Building in release mode
    Compiling .pio/build/native/src/main.o
    Linking .pio/build/native/program

      at log (__tests__/integration/code-generation/code-compilation.test.ts:42:17)

  console.log
    
    STDERR:

      at log (__tests__/integration/code-generation/code-compilation.test.ts:46:17)

  console.log
    /usr/bin/ld: .pio/build/native/src/main.o: in function `main':
    main.cpp:(.text+0x1c): undefined reference to `new_model_init'
    /usr/bin/ld: main.cpp:(.text+0x28): undefined reference to `new_model_step'
    collect2: error: ld returned 1 exit status
    *** [.pio/build/native/program] Error 1
    ========================== [FAILED] Took 3.32 seconds ==========================

      at log (__tests__/integration/code-generation/code-compilation.test.ts:47:17)

  console.log
    
    ERROR MESSAGE:

      at log (__tests__/integration/code-generation/code-compilation.test.ts:51:17)

  console.log
    Command failed: docker run --rm -v C:\Users\rrain\OneDrive\Documents\GitHub\obliq-2\__tests__\integration\code-generation\platformio-test\temp\new_model:/workspace -w /workspace platformio-test bash -c "find . -print && pio run -e native && .pio/build/native/program"
    /usr/bin/ld: .pio/build/native/src/main.o: in function `main':
    main.cpp:(.text+0x1c): undefined reference to `new_model_init'
    /usr/bin/ld: main.cpp:(.text+0x28): undefined reference to `new_model_step'
    collect2: error: ld returned 1 exit status
    *** [.pio/build/native/program] Error 1
    ========================== [FAILED] Took 3.32 seconds ==========================

      at log (__tests__/integration/code-generation/code-compilation.test.ts:52:17)

  console.log
    
    ********************************************************************************

      at Object.log (__tests__/integration/code-generation/code-compilation.test.ts:265:13)

  console.log
    BEFORE EACH - Setting up directories

      at Object.log (__tests__/integration/code-generation/code-compilation.test.ts:266:13)

  console.log
    ********************************************************************************

      at Object.log (__tests__/integration/code-generation/code-compilation.test.ts:267:13)

  console.log
    
    ################################################################################

      at log (__tests__/integration/code-generation/code-compilation.test.ts:359:13)

  console.log
    TEST: Simple Sum Block

      at log (__tests__/integration/code-generation/code-compilation.test.ts:360:13)

  console.log
    SOURCE: hardcoded

      at log (__tests__/integration/code-generation/code-compilation.test.ts:361:13)

  console.log
    ################################################################################

      at log (__tests__/integration/code-generation/code-compilation.test.ts:362:13)

  console.log
    [CodeGen] generateStepFunction called

      at log (src/lib/codeGeneration.ts:299:11)

  console.log
    [CodeGen] Collecting internal signals...

      at log (src/lib/codeGeneration.ts:308:13)

  console.log
    [CodeGen] Calculating execution order...

      at log (src/lib/codeGeneration.ts:327:13)

  console.log
    [CodeGen] Execution order calculated, blocks: 4

      at log (src/lib/codeGeneration.ts:329:13)

  console.log
    [CodeGen] Processing block: input_port Input1

      at log (src/lib/codeGeneration.ts:339:15)

  console.log
    [CodeGen] Skipping block type: input_port

      at log (src/lib/codeGeneration.ts:347:17)

  console.log
    [CodeGen] Processing block: input_port Input2

      at log (src/lib/codeGeneration.ts:339:15)

  console.log
    [CodeGen] Skipping block type: input_port

      at log (src/lib/codeGeneration.ts:347:17)

  console.log
    [CodeGen] Processing block: sum Sum1

      at log (src/lib/codeGeneration.ts:339:15)

  console.log
    [CodeGen] generateBlockComputation for: sum Sum1

      at log (src/lib/codeGeneration.ts:379:11)

  console.log
    [CodeGen] Block has 2 input connections

      at log (src/lib/codeGeneration.ts:395:11)

  console.log
    [CodeGen] Processing block: output_port Output1

      at log (src/lib/codeGeneration.ts:339:15)

  console.log
    [CodeGen] generateBlockComputation for: output_port Output1

      at log (src/lib/codeGeneration.ts:379:11)

  console.log
    [CodeGen] Block has 1 input connections

      at log (src/lib/codeGeneration.ts:395:11)

  console.log
    [CodeGen] Step function generation complete

      at log (src/lib/codeGeneration.ts:365:13)

  console.log
    
    Generated file: simple_sum_block.h (800 bytes)

      at log (__tests__/integration/code-generation/code-compilation.test.ts:383:15)
          at Array.forEach (<anonymous>)

  console.log
    ----------------------------------------

      at log (__tests__/integration/code-generation/code-compilation.test.ts:384:15)
          at Array.forEach (<anonymous>)

  console.log
    #ifndef SIMPLE_SUM_BLOCK_H
    #define SIMPLE_SUM_BLOCK_H
    
    #include <stdint.h>
    #include <stdbool.h>
    #include <string.h>
    #include <math.h>
    
    #ifdef __cplusplus
    extern "C" {
    #endif
    
    // Input signals structure
    typedef struct {
        double Input1;
        double Input2;
    } simple_sum_block_inputs_t;
    
    // Output signals structure
    typedef struct {
        double Output1;
    } simple_sum_block_outputs_t;
    
    // Main model structure
    typedef struct {
        simple_sum_block_inputs_t inputs;
        simple_sum_block_outputs_t outputs
    ...

      at log (__tests__/integration/code-generation/code-compilation.test.ts:385:15)
          at Array.forEach (<anonymous>)

  console.log
    ----------------------------------------

      at log (__tests__/integration/code-generation/code-compilation.test.ts:386:15)
          at Array.forEach (<anonymous>)

  console.log
    
    Generated file: simple_sum_block.c (625 bytes)

      at log (__tests__/integration/code-generation/code-compilation.test.ts:383:15)
          at Array.forEach (<anonymous>)

  console.log
    ----------------------------------------

      at log (__tests__/integration/code-generation/code-compilation.test.ts:384:15)
          at Array.forEach (<anonymous>)

  console.log
    #include "simple_sum_block.h"
    
    void simple_sum_block_init(simple_sum_block_t* model, double time_step) {
        // Initialize model parameters
        model->time = 0.0;
        model->dt = time_step;
    
        // Initialize inputs
        model->inputs.Input1 = 0;
        model->inputs.Input2 = 0;
    
    }
    
    void simple_sum_block_step(simple_sum_block_t* model) {
        // Internal signals
        double sig_Sum1;
    
        // Compute block outputs
        // Sum block: Sum1
        sig_Sum1 = model->inputs.Input1 + model->inputs.Input2;
        //
    ...

      at log (__tests__/integration/code-generation/code-compilation.test.ts:385:15)
          at Array.forEach (<anonymous>)

  console.log
    ----------------------------------------

      at log (__tests__/integration/code-generation/code-compilation.test.ts:386:15)
          at Array.forEach (<anonymous>)

  console.log
    
    Generated file: library.properties (293 bytes)

      at log (__tests__/integration/code-generation/code-compilation.test.ts:383:15)
          at Array.forEach (<anonymous>)

  console.log
    ----------------------------------------

      at log (__tests__/integration/code-generation/code-compilation.test.ts:384:15)
          at Array.forEach (<anonymous>)

  console.log
    name=simple_sum_block
    version=1.0.0
    author=Generated
    maintainer=Generated
    sentence=Generated library from visual model simple_sum_block
    paragraph=This library was automatically generated from a block diagram model.
    category=Signal Input/Output
    url=
    architectures=*
    includes=simple_sum_block.h

      at log (__tests__/integration/code-generation/code-compilation.test.ts:385:15)
          at Array.forEach (<anonymous>)

  console.log
    ----------------------------------------

      at log (__tests__/integration/code-generation/code-compilation.test.ts:386:15)
          at Array.forEach (<anonymous>)

  console.log
    
    Test program: C:\Users\rrain\OneDrive\Documents\GitHub\obliq-2\__tests__\integration\code-generation\platformio-test\src\main.cpp

      at log (__tests__/integration/code-generation/code-compilation.test.ts:400:13)

  console.log
    ----------------------------------------

      at log (__tests__/integration/code-generation/code-compilation.test.ts:401:13)

  console.log
    #include <simple_sum_block.h>
    #include <stdio.h>
    
    int main() {
        simple_sum_block_t model;
        simple_sum_block_init(&model, 0.01);
        
        model.inputs.Input1 = 1.0;
        model.inputs.Input2 = 2.0;
        
        // Run one step
        simple_sum_block_step(&model);
        
        printf("Output1: %f\n", model.outputs.Output1);
        
        return 0;
    }

      at log (__tests__/integration/code-generation/code-compilation.test.ts:402:13)

  console.log
    ----------------------------------------

      at log (__tests__/integration/code-generation/code-compilation.test.ts:403:13)

  console.log
    
    Running compilation in Docker for Simple Sum Block...

      at log (__tests__/integration/code-generation/code-compilation.test.ts:144:13)

  console.log
    
    ================================================================================

      at log (__tests__/integration/code-generation/code-compilation.test.ts:16:13)

  console.log
    EXECUTING: docker run --rm -v C:\Users\rrain\OneDrive\Documents\GitHub\obliq-2\__tests__\integration\code-generation\platformio-test\temp\simple_sum_block:/workspace -w /workspace platformio-test bash -c "find . -print && pio run -e native && .pio/build/native/program"

      at log (__tests__/integration/code-generation/code-compilation.test.ts:17:13)

  console.log
    IN DIR: C:\Users\rrain\OneDrive\Documents\GitHub\obliq-2

      at log (__tests__/integration/code-generation/code-compilation.test.ts:18:13)

  console.log
    ================================================================================

      at log (__tests__/integration/code-generation/code-compilation.test.ts:19:13)

  console.log
    COMMAND FAILED!

      at log (__tests__/integration/code-generation/code-compilation.test.ts:38:15)

  console.log
    
    STDOUT:

      at log (__tests__/integration/code-generation/code-compilation.test.ts:41:17)

  console.log
    .
    ./lib
    ./lib/simple_sum_block
    ./lib/simple_sum_block/library.properties
    ./lib/simple_sum_block/simple_sum_block.h
    ./lib/simple_sum_block/src
    ./lib/simple_sum_block/src/simple_sum_block.c
    ./platformio.ini
    ./src
    ./src/main.cpp
    ./src/simple_sum_block.h
    Processing native (platform: native)
    --------------------------------------------------------------------------------
    Tool Manager: Installing platformio/tool-scons @ ~4.40801.0
    Downloading 0% 10% 20% 30% 40% 50% 60% 70% 80% 90% 100%
    Unpacking 0% 10% 20% 30% 40% 50% 60% 70% 80% 90% 100%
    Tool Manager: tool-scons@4.40801.0 has been installed!
    Verbose mode can be enabled via `-v, --verbose` option
    LDF: Library Dependency Finder -> https://bit.ly/configure-pio-ldf
    LDF Modes: Finder ~ chain, Compatibility ~ soft
    Found 0 compatible libraries
    Scanning dependencies...
    No dependencies
    Building in release mode
    Compiling .pio/build/native/src/main.o
    Linking .pio/build/native/program

      at log (__tests__/integration/code-generation/code-compilation.test.ts:42:17)

  console.log
    
    STDERR:

      at log (__tests__/integration/code-generation/code-compilation.test.ts:46:17)

  console.log
    /usr/bin/ld: .pio/build/native/src/main.o: in function `main':
    main.cpp:(.text+0x1c): undefined reference to `simple_sum_block_init'
    /usr/bin/ld: main.cpp:(.text+0x42): undefined reference to `simple_sum_block_step'
    collect2: error: ld returned 1 exit status
    *** [.pio/build/native/program] Error 1
    ========================== [FAILED] Took 3.37 seconds ==========================

      at log (__tests__/integration/code-generation/code-compilation.test.ts:47:17)

  console.log
    
    ERROR MESSAGE:

      at log (__tests__/integration/code-generation/code-compilation.test.ts:51:17)

  console.log
    Command failed: docker run --rm -v C:\Users\rrain\OneDrive\Documents\GitHub\obliq-2\__tests__\integration\code-generation\platformio-test\temp\simple_sum_block:/workspace -w /workspace platformio-test bash -c "find . -print && pio run -e native && .pio/build/native/program"
    /usr/bin/ld: .pio/build/native/src/main.o: in function `main':
    main.cpp:(.text+0x1c): undefined reference to `simple_sum_block_init'
    /usr/bin/ld: main.cpp:(.text+0x42): undefined reference to `simple_sum_block_step'
    collect2: error: ld returned 1 exit status
    *** [.pio/build/native/program] Error 1
    ========================== [FAILED] Took 3.37 seconds ==========================

      at log (__tests__/integration/code-generation/code-compilation.test.ts:52:17)

FAIL __tests__/integration/code-generation/code-compilation.test.ts (18.843 s)
  Code Generation Compilation Tests
    × should compile Model itest-01 (from itest-01.json) (4776 ms)
    × should compile Multiply and Scale Test (from itest-02-with-metadata.json) (4252 ms)
    × should compile New Model (from itest-02.json) (4053 ms)
    × should compile Simple Sum Block (from hardcoded) (4142 ms)

  ● Code Generation Compilation Tests › should compile Model itest-01 (from itest-01.json)

    Compilation failed for Model itest-01: /usr/bin/ld: .pio/build/native/src/main.o: in function `main':
    main.cpp:(.text+0x1c): undefined reference to `model_itest_01_init'
    /usr/bin/ld: main.cpp:(.text+0x28): undefined reference to `model_itest_01_step'
    collect2: error: ld returned 1 exit status
    *** [.pio/build/native/program] Error 1
    ========================== [FAILED] Took 3.75 seconds ==========================

    [0m [90m 407 |[39m     
     [90m 408 |[39m     [36mif[39m ([33m![39mcompileResult[33m.[39msuccess) {
    [31m[1m>[22m[39m[90m 409 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m`Compilation failed for ${name}: ${compileResult.output}`[39m)
     [90m     |[39m             [31m[1m^[22m[39m
     [90m 410 |[39m     }
     [90m 411 |[39m     
     [90m 412 |[39m     console[33m.[39mlog([32m'\n✅ Compilation and execution successful!'[39m)[0m

      at __tests__/integration/code-generation/code-compilation.test.ts:409:13

  ● Code Generation Compilation Tests › should compile Multiply and Scale Test (from itest-02-with-metadata.json)

    Compilation failed for Multiply and Scale Test: /usr/bin/ld: .pio/build/native/src/main.o: in function `main':
    main.cpp:(.text+0x1c): undefined reference to `multiply_and_scale_test_init'
    /usr/bin/ld: main.cpp:(.text+0x42): undefined reference to `multiply_and_scale_test_step'
    collect2: error: ld returned 1 exit status
    *** [.pio/build/native/program] Error 1
    ========================== [FAILED] Took 3.43 seconds ==========================

    [0m [90m 407 |[39m     
     [90m 408 |[39m     [36mif[39m ([33m![39mcompileResult[33m.[39msuccess) {
    [31m[1m>[22m[39m[90m 409 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m`Compilation failed for ${name}: ${compileResult.output}`[39m)
     [90m     |[39m             [31m[1m^[22m[39m
     [90m 410 |[39m     }
     [90m 411 |[39m     
     [90m 412 |[39m     console[33m.[39mlog([32m'\n✅ Compilation and execution successful!'[39m)[0m

      at __tests__/integration/code-generation/code-compilation.test.ts:409:13

  ● Code Generation Compilation Tests › should compile New Model (from itest-02.json)

    Compilation failed for New Model: /usr/bin/ld: .pio/build/native/src/main.o: in function `main':
    main.cpp:(.text+0x1c): undefined reference to `new_model_init'
    /usr/bin/ld: main.cpp:(.text+0x28): undefined reference to `new_model_step'
    collect2: error: ld returned 1 exit status
    *** [.pio/build/native/program] Error 1
    ========================== [FAILED] Took 3.32 seconds ==========================

    [0m [90m 407 |[39m     
     [90m 408 |[39m     [36mif[39m ([33m![39mcompileResult[33m.[39msuccess) {
    [31m[1m>[22m[39m[90m 409 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m`Compilation failed for ${name}: ${compileResult.output}`[39m)
     [90m     |[39m             [31m[1m^[22m[39m
     [90m 410 |[39m     }
     [90m 411 |[39m     
     [90m 412 |[39m     console[33m.[39mlog([32m'\n✅ Compilation and execution successful!'[39m)[0m

      at __tests__/integration/code-generation/code-compilation.test.ts:409:13

  ● Code Generation Compilation Tests › should compile Simple Sum Block (from hardcoded)

    Compilation failed for Simple Sum Block: /usr/bin/ld: .pio/build/native/src/main.o: in function `main':
    main.cpp:(.text+0x1c): undefined reference to `simple_sum_block_init'
    /usr/bin/ld: main.cpp:(.text+0x42): undefined reference to `simple_sum_block_step'
    collect2: error: ld returned 1 exit status
    *** [.pio/build/native/program] Error 1
    ========================== [FAILED] Took 3.37 seconds ==========================

    [0m [90m 407 |[39m     
     [90m 408 |[39m     [36mif[39m ([33m![39mcompileResult[33m.[39msuccess) {
    [31m[1m>[22m[39m[90m 409 |[39m       [36mthrow[39m [36mnew[39m [33mError[39m([32m`Compilation failed for ${name}: ${compileResult.output}`[39m)
     [90m     |[39m             [31m[1m^[22m[39m
     [90m 410 |[39m     }
     [90m 411 |[39m     
     [90m 412 |[39m     console[33m.[39mlog([32m'\n✅ Compilation and execution successful!'[39m)[0m

      at __tests__/integration/code-generation/code-compilation.test.ts:409:13

Test Suites: 1 failed, 1 total
Tests:       4 failed, 4 total
Snapshots:   0 total
Time:        19.28 s
Ran all test suites matching /__tests__\\integration\\code-generation/i.
